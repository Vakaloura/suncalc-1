#!/bin/bash

INPUT_JSON="$1"
if [ -z "$INPUT_JSON" ]; then
    echo "Please provide the metadata.json file path as first argument." 1>&2
    exit 1
fi

NAME="$(jq --raw-output '.name' "$INPUT_JSON")"
SOURCE_URL="$(jq --raw-output '.url' "$INPUT_JSON")"
API_DOCS_URL="$(jq --raw-output '.support.docs' "$INPUT_JSON")"

BUILD_IMG="$(jq --raw-output '"[![Build Status](" + .integration_testing.img + ")](" + .integration_testing.url + ")"' "$INPUT_JSON")"

echo "# $NAME

<!-- This file was generated by ./scripts/print_main_readme. Do not edit this file directly but
     instead have a look at the ./metainfo.json file and said script. -->

${BUILD_IMG}
$(jq --raw-output '[ .target_info[] | select(.package_badge != null) ] | map("[![" + .package_platform + " version](" + .package_badge + ")](" + .package_url + ")") | join("\n")' "$INPUT_JSON")

"

echo '

The SunCalc class allows to calculate sun position,
sunlight phases (times for sunrise, sunset, dusk, etc.),
moon position and lunar phase for the given location and time.

The library was ported to Haxe by [Robin `ypid` Schneider](https://github.com/ypid).

It is based on the [JavaScript implementation](https://github.com/mourner/suncalc)
created by [Vladimir Agafonkin](http://agafonkin.com/en) ([@mourner](https://github.com/mourner))
as a part of the [SunCalc.net project](http://suncalc.net).

Most calculations are based on the formulas given in the excellent Astronomy Answers articles
about [position of the sun](http://aa.quae.nl/en/reken/zonpositie.html)
and [the planets](http://aa.quae.nl/en/reken/hemelpositie.html).
You can read about different twilight phases calculated by SunCalc
in the [Twilight article on Wikipedia](https://en.wikipedia.org/wiki/Twilight).
'

echo "
Refer to the [API documentation](${API_DOCS_URL}) for details.

## Supported languages/platforms

"

# Languages/platforms for which this library has been build/tested and is installable via a package manager of the target platform:

jq --raw-output '[ .target_info[] | select(.package_url != null) ] | map("* [" + .target_env_name + "](" + .package_url + "), [target build repo](" + .repo_url + ")") | join("\n")' ${INPUT_JSON}


## Supported languages
# Languages/platforms for which this library has been build/tested but it is not package manager of the target platform:

jq --raw-output '[ .target_info[] | select(.package_url == null) ] | map("* " + .target_env_name) | join("\n")' ${INPUT_JSON}


echo '
## Limitations

The following limitations seems to be related which should mean that when they are fixed for one target, the tests for the other targets should also pass. If you need `SunCalc.getMoonTimes` for one of those targets, feel free to debug it further.

* Python: `SunCalc.getMoonTimes` (`rise` date can not be calculated.).
* C++: `SunCalc.getMoonTimes` (`segmentation fault`).
* Java: `SunCalc.getMoonTimes` (`java.lang.NullPointerException`).
* Neko: `SunCalc.getMoonTimes`

## Unsure/untested

* ActionScript 3: Does compile but I have no idea how to test it.
* Flash: Does compile but I have no idea how to test it.

## Unsupported

* C#: Dependency `datetime` does not compile on target "datetime/3,0,2/src/datetime/DateTime.hx:146: characters 28-110 : haxe.Int64 should be Float"

  Priority low.
'
